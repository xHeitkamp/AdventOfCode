function createASCII(text: string, sign?: string): string {
	if (text.length === 0) {
		return '';
	}

	// ASCII-Zeichen für jeden Buchstaben im Alphabet
	const asciiArt: { [key: string]: string[] } = {
		A: [
			'   *    ',
			'  * *   ',
			' *   *  ',
			'******* ',
			'*     * ',
			'*     * ',
			'*     * ',
		],
		B: [
			'******  ',
			'*     * ',
			'*     * ',
			'******  ',
			'*     * ',
			'*     * ',
			'******  ',
		],
		C: [
			' ****** ',
			' *      ',
			' *      ',
			' *      ',
			' *      ',
			' *      ',
			' ****** ',
		],
		D: [
			'******  ',
			'*     * ',
			'*     * ',
			'*     * ',
			'*     * ',
			'*     * ',
			'******  ',
		],
		E: [
			'******* ',
			'*       ',
			'*       ',
			'******  ',
			'*       ',
			'*       ',
			'******* ',
		],
		F: [
			'******* ',
			'*       ',
			'*       ',
			'******  ',
			'*       ',
			'*       ',
			'*       ',
		],
		G: [
			' ****** ',
			' *      ',
			' *      ',
			' *  *** ',
			' *     *',
			' *     *',
			' ****** ',
		],
		H: [
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*******  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
		],
		I: [
			'*******  ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
			'*******  ',
		],
		J: [
			'   ***** ',
			'      *  ',
			'      *  ',
			'      *  ',
			' *    *  ',
			' *    *  ',
			'  *****  ',
		],
		K: [
			'*     *  ',
			'*    *   ',
			'*    *   ',
			'***      ',
			'*    *   ',
			'*     *  ',
			'*     *  ',
		],
		L: [
			'*        ',
			'*        ',
			'*        ',
			'*        ',
			'*        ',
			'*        ',
			'*******  ',
		],
		M: [
			'*     *  ',
			'**   **  ',
			'* * * *  ',
			'*  *  *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
		],
		N: [
			'*     *  ',
			'**    *  ',
			'* *   *  ',
			'*  *  *  ',
			'*   * *  ',
			'*    **  ',
			'*     *  ',
			'         ',
		],
		O: [
			' ******  ',
			'*      * ',
			'*      * ',
			'*      * ',
			'*      * ',
			'*      * ',
			' ******  ',
		],
		P: [
			'******   ',
			'*     *  ',
			'*     *  ',
			'******   ',
			'*        ',
			'*        ',
			'*        ',
		],
		Q: [
			' ******  ',
			'*      * ',
			'*      * ',
			'*      * ',
			'*      * ',
			'*   *  * ',
			' ****** *',
		],
		R: [
			'******   ',
			'*     *  ',
			'*     *  ',
			'******   ',
			'*   *    ',
			'*    *   ',
			'*     *  ',
		],
		S: [
			' ******  ',
			' *       ',
			' *       ',
			' ******  ',
			'      *  ',
			'      *  ',
			' ******  ',
		],
		T: [
			'*******  ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
		],
		U: [
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
			' *****   ',
		],
		V: [
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
			' *   *   ',
			'  * *    ',
			'   *     ',
		],
		W: [
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*     *  ',
			'*  *  *  ',
			'* * * *  ',
			'**   **  ',
		],
		X: [
			'*     *  ',
			' *   *   ',
			'  * *    ',
			'   *     ',
			'  * *    ',
			' *   *   ',
			'*     *  ',
		],
		Y: [
			'*     *  ',
			' *   *   ',
			'  * *    ',
			'   *     ',
			'   *     ',
			'   *     ',
			'   *     ',
		],
		Z: [
			'********  ',
			'       *  ',
			'      *   ',
			'    *     ',
			'  *       ',
			' *        ',
			'********  ',
		],
		' ': [
			'       ',
			'       ',
			'       ',
			'       ',
			'       ',
			'       ',
			'       ',
		],
		'0': [
			'  ****    ',
			' *    *   ',
			'*      *  ',
			'*      *  ',
			'*      *  ',
			' *    *   ',
			'  ****    ',
		],
		'1': [
			'    **    ',
			'  *  *    ',
			' *   *    ',
			'*    *    ',
			'     *    ',
			'     *    ',
			'   *****  ',
		],
		'2': [
			' ******   ',
			'       *  ',
			'       *  ',
			' ******   ',
			'*         ',
			'*         ',
			' ******   ',
		],
		'3': [
			' ******   ',
			'       *  ',
			'       *  ',
			' ******   ',
			'       *  ',
			'       *  ',
			' ******   ',
		],
		'4': [
			'*      *  ',
			'*      *  ',
			'*      *  ',
			' ******   ',
			'       *  ',
			'       *  ',
			'       *  ',
		],
		'5': [
			' ******   ',
			'*         ',
			'*         ',
			' ******   ',
			'       *  ',
			'       *  ',
			' ******   ',
		],
		'6': [
			' ******   ',
			'*         ',
			'*         ',
			' ******   ',
			'*      *  ',
			'*      *  ',
			' ******   ',
		],
		'7': [
			'*******   ',
			'     *    ',
			'    *     ',
			'   *      ',
			'   *      ',
			'   *      ',
			'   *      ',
		],
		'8': [
			' ******   ',
			'*      *  ',
			'*      *  ',
			' ******   ',
			'*      *  ',
			'*      *  ',
			' ******   ',
		],
		'9': [
			' ******   ',
			'*      *  ',
			'*      *  ',
			' ******   ',
			'       *  ',
			'       *  ',
			' ******   ',
		],
	};

	let result: string[] = Array(7).fill(''); // Wir benötigen 7 Zeilen für die ASCII-Art

	// Den eingegebenen String durchlaufen und ASCII-Art erstellen
	for (let char of text.toUpperCase()) {
		if (asciiArt[char]) {
			// Für jedes Zeichen den entsprechenden ASCII-Art-Block anhängen
			for (let i = 0; i < 7; i++) {
				result[i] += asciiArt[char][i];
			}
		}
	}

	const asciiLength = result[0].length;
	let line: string = '';
	for (let i = 0; i < asciiLength; i++) {
		line += '*';
	}
	result.unshift(line);
	result.push(line);

	let asciiText = result.map(x => x.slice(0, -2)).join('\n');
	if (sign) {
		asciiText = asciiText.replace(/\*/g, sign);
	}

	return asciiText;
}

export { createASCII };
